lines(25:28, predict(
fit,
newdata=data.frame(year=rep(c(2018), each=3), quarter=rep(1:3,1))))
newQ <- as.data.frame(quarters)
View(newQ)
rep(c(newQ))
rep(newQ)
lines(25:28, predict(
fit,
newdata=data.frame(year=rep(c(2018), each=3), quarter=rep(1:3,1))))
fit <- lm(rev_total ~ rev_used + rev_wholesale, data=data)
year<-seq(from=2011,to=2020,by=.33)
cpi<-c(rev_total)
df <- data.frame(year,cpi)
plot(df)+abline(lm(df$cpi~df$year))
newQ <- as.data.frame(quarters)
rep(newQ)
lines(25:28, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year<-seq(from=2011,to=2020,by=.33)
cpi<-c(rev_total)
df <- data.frame(year,cpi)
plot(df)+abline(lm(df$cpi~df$year))
newQ <- as.data.frame(quarters)
rep(newQ)
lines(25:28, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024), each=3), quarter=rep(1:3,1))))
year<-seq(from=2011,to=2020,by=.33)
cpi<-c(rev_total)
df <- data.frame(year,cpi)
newQ <- as.data.frame(quarters)
plot(df)+abline(lm(df$cpi~df$year))
rep(newQ)
lines(25:28, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year<-seq(from=2011,to=2020,by=.33)
cpi<-c(rev_total)
df <- data.frame(year,cpi)
plot(df)+abline(lm(df$cpi~df$year))
newQ <- as.data.frame(quarters)
rep(newQ)
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year<-seq(from=2011,to=2020,by=.33)
cpi<-c(rev_total)
df <- data.frame(year,cpi)
plot(df)+abline(lm(df$cpi~df$year))
plot(r(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:33, predict(
fit,
newdata=data.frame(year=rep(c(2018), each=3), quarter=rep(1:3,1))))
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
excel_sheets('financial_cleaned.xlsx')
input_sheet = read_excel("financial_cleaned.xlsx", sheet=1, col_names = TRUE)
library(zoo)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2010 + seq(0, 23)/3)
format(quarters, "%Y Quarter %q")
quarterly_indexes = c()
for (i in 0:69) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
data <- data.frame(rev_used, rev_wholesale, rev_other, rev_total)
rownames(data) <- quarters
fit <- lm(rev_total ~ as.numeric(quarters), data=data)
summary(fit)
x<-fitted(fit)
q <- as.numeric(quarters)
cpi<-c(rev_total)
df <- data.frame(q,cpi)
plot(df)+abline(lm(df$cpi~q))
newQ <- as.data.frame(quarters)
rep(newQ)
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
excel_sheets('financial_cleaned.xlsx')
library(zoo)
input_sheet = read_excel("financial_cleaned.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2010 + seq(0, 23)/3)
format(quarters, "%Y Quarter %q")
quarterly_indexes = c()
for (i in 0:69) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
data <- data.frame(rev_used, rev_wholesale, rev_other, rev_total)
rownames(data) <- quarters
fit <- lm(rev_total ~ as.numeric(quarters), data=data)
summary(fit)
x<-fitted(fit)
q <- as.numeric(quarters)
cpi<-c(rev_total)
df <- data.frame(q,cpi)
plot(df)+abline(lm(df$cpi~q))
newQ <- as.data.frame(quarters)
rep(newQ)
plot(c(cpi,rep(NA,24)),ylab="CPI",xlab="",ylim=c(2000000, 4500000))
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(year,quarter,sep="C"),at=1:48,las=3)
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
excel_sheets('financial_cleaned.xlsx')
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2010 + seq(0, 23)/3)
format(quarters, "%Y Quarter %q")
for (i in 0:69) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
data <- data.frame(rev_used, rev_wholesale, rev_other, rev_total)
rownames(data) <- quarters
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
input_sheet = read_excel("financial_cleaned.xlsx", sheet=1, col_names = TRUE)
fit <- lm(rev_total ~ as.numeric(quarters), data=data)
summary(fit)
quarterly_indexes = c()
x<-fitted(fit)
newQ <- as.data.frame(quarters)
rep(newQ)
#xaxt="n"
plot(c(cpi,rep(NA,24)),ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(year,quarter,sep="C"),at=1:48,las=3)
#xaxt="n"
plot(c(cpi,rep(NA,24)),ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(quarters),at=1:48,las=3)
year <- rep(2010:2025, each=3)
axis(1,labels=paste(quarters),at=1:24,las=3)
#xaxt="n"
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(quarters),at=1:24,las=3)
#xaxt="n"
plot(c(cpi,rep(NA,24)),xaxt="n",ylab="CPI",xlab="",ylim=c(2000000, 4500000))
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(quarters),at=1:48,las=3)
#48, until 2025
lines(25:48, predict(
fit,
newdata=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))))
year <- rep(2010:2025, each=3)
axis(1,labels=paste(year, quarter, sep="Q"),at=1:48,las=3)
fit <- lm(rev_total ~ as.numeric(quarters), data=data)
summary(fit)
x<-fitted(fit)
View(fit)
predict(fit, newdata = data.frame(x = 2018.00))
install.packages('forecast', dependencies = TRUE)
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
excel_sheets('new_stores.xlsx')
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
format(quarters, "%Y Quarter %q")
quarterly_indexes = c()
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
rev_total <- as.data.frame((rev_total))
training <- rev_total[sample,]
testing <- data[-sample,]
tsData = ts(rev_total, start = c(2011,1), frequency = 4)
arima_forecast = forecast(fit, h = 1)
accuracy(fit)
plot(arima_forecast)
x<-fitted(fit)
#q <- as.numeric(quarters)
cpi<-c(rev_total)
quarter<-rep(1:4,4)
#old_data=data.frame(year=rep(c(2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025), each=3), quarter=rep(1:3,1))
testing=data.frame((year=new_quarters), quarter=rep(1:4,1))
year<-rep(2010:2025,each=4)
lines(1:31, predict(
fit,
testing))
year<-rep(2010:2025,each=4)
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
summary(fit)
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
sample <- sample.int(n = nrow(data), size = floor(1*nrow(data)), replace = F)
axis(1,labels=paste(year,quarter,sep=" Q"),at=1:64,las=3)
plot(c(cpi,rep(NA,32)), xaxt="n", ylab="CPI",xlab="",ylim=c(2000000, 9000000))
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
quarters <-  as.numeric(quarters)
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
coef(fit)
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
excel_sheets('new_stores.xlsx')
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
format(quarters, "%Y Quarter %q")
quarterly_indexes = c()
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
rev_total <- as.data.frame((rev_total))
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
sample <- sample.int(n = nrow(data), size = floor(1*nrow(data)), replace = F)
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
quarters <-  as.numeric(quarters)
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
training <- rev_total[sample,]
testing <- data[-sample,]
tsData = ts(rev_total, start = c(2011,1), frequency = 4)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 1)
accuracy(fit)
plot(arima_forecast)
summary(fit)
accuracy(fit)
sample <- sample.int(n = nrow(data), size = floor(1*nrow(data)), replace = F)
training <- rev_total[sample,]
testing <- rev_total[-sample,]
training
testing
sample <- sample.int(n = nrow(data)*0.8, size = floor(1*nrow(data)), replace = F)
sample <- sample.int(n = nrow(data)*(0.8), size = floor(1*nrow(data)), replace = F)
sample <- sample.int(n = nrow(data)*(0.8), size = floor(1*nrow(data)), replace = T)
training <- rev_total[sample,]
testing <- rev_total[-sample,]
testing
training
rev_total
quarters
rownames(training) <- quarters
training <- rev_total[sample,]
testing <- rev_total[-sample,]
rownames(rev_total) <- quarters
rev_total
rev_total <- as.data.frame((rev_total))
rownames(rev_total) <- quarters
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
sample <- sample.int(n = nrow(data)*(0.8), size = floor(1*nrow(data)), replace = T)
training <- rev_total[sample,]
testing <- rev_total[-sample,]
training
rev_total <- as.data.frame((rev_total))
rev_total$quarters <- quarters
rev_total
training <- rev_total[sample,]
testing <- rev_total[-sample,]
training
help("auto.arima")
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
excel_sheets('new_stores.xlsx')
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
quarters <-  as.numeric(quarters)
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
rev_total$quarters <- quarters
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
quarterly_indexes = c()
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
sample <- sample.int(n = nrow(data)*(0.8), size = floor(1*nrow(data)), replace = T)
format(quarters, "%Y Quarter %q")
rev_total <- as.data.frame((rev_total))
training <- rev_total[sample,]
testing <- rev_total[-sample,]
tsData = ts(training, start = c(2011,1), frequency = 4)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 1)
accuracy(fit)
plot(arima_forecast)
summary(fit)
arima_forecast
tsData = ts(training, start = c(2011,1), frequency = 4)
tsData
View(tsData)
sample
training <- rev_total[sample,]
training
accuracy()
accuracy(fit)
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
excel_sheets('new_stores.xlsx')
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
quarters <-  as.numeric(quarters)
quarterly_indexes = c()
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
rev_total <- as.data.frame((rev_total))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
format(quarters, "%Y Quarter %q")
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
rev_total$quarters <- quarters
sample <- sample.int(n = nrow(data)*(0.5), size = floor(1*nrow(data)), replace = T)
training <- rev_total[sample,]
testing <- rev_total[-sample,]
tsData = ts(training, start = c(2011,1), frequency = 4)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 1)
accuracy(fit)
plot(arima_forecast)
summary(fit)
coef(fit)
x<-fitted(fit)
#q <- as.numeric(quarters)
cpi<-c(rev_total)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 1)
View(training)
# allows reading/writing of excel sheets, functions
library(readxl)
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
excel_sheets('new_stores.xlsx')
#read excel sheets
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
#get data
quarterly_indexes = c()
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
# zoo sequence to create name as year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
format(quarters, "%Y Quarter %q")
quarters <-  as.numeric(quarters)
#organize data for arima model
rev_used = as.numeric(t(input_sheet[7,quarterly_indexes]))
rev_wholesale = as.numeric(t(input_sheet[8,quarterly_indexes]))
rev_other = as.numeric(t(input_sheet[13,quarterly_indexes]))
rev_total = as.numeric(t(input_sheet[15,quarterly_indexes]))
rev_total <- as.data.frame((rev_total))
#training
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
sample <- sample.int(n = nrow(data), size = floor(1*nrow(data)), replace = T)
training <- rev_total[sample,]
testing <- data[-sample,]
#change to time series
tsData = ts(rev_total, start = c(2011,1), frequency = 4)
#model and graph
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 1)
accuracy(fit)
plot(arima_forecast)
arima_forecast
summary(fit)
#accuracy analysis
summary(fit)
x<-fitted(fit)
# allows reading of excel sheets
library(readxl)
# allows writing of excel sheets
library(writexl)
library(zoo)
library(forecast)
excel_sheets('financial_recleaned.xlsx')
input_sheet = read_excel("financial_recleaned.xlsx", sheet=1, col_names = TRUE)
new_stores = read_excel("new_stores.xlsx", sheet=1, col_names = TRUE)
# zoo sequence to name year/quarter
quarters <- as.yearqtr(2011 + seq(0, 30)/4)
quarters <-  as.numeric(quarters)
for (i in 0:90) {
if (i%%3==0) {
quarterly_indexes <- c(quarterly_indexes, 5+i)
}
}
profit_total = as.numeric(t(input_sheet[24,quarterly_indexes]))
profit_total <- as.data.frame((profit_total))
data <- data.frame(quarters, rev_used, rev_wholesale, rev_other, new_stores["nstores"], rev_total)
training <- profit_total[sample,]
testing <- data[-sample,]
tsData = ts(profit_total, start = c(2011,1), frequency = 4)
arima_forecast = forecast(fit, h = 10)
accuracy(fit)
plot(arima_forecast, main="Profit Forecasting", xlab="Quarter", ylab="Gross Profit, in Thousands of Dollars")
summary(fit)
x<-fitted(fit)
quarterly_indexes = c()
format(quarters, "%Y Quarter %q")
coef(fit)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
excel_sheets('new_stores.xlsx')
sample <- sample.int(n = nrow(data), size = floor(1*nrow(data)), replace = F)
summary(fit)
coef(fit)
x<-fitted(fit)
tsData = ts(profit_total, start = c(2011,1), frequency = 4)
fit <- auto.arima(tsData, approximation=FALSE, trace=FALSE)
arima_forecast = forecast(fit, h = 10)
accuracy(fit)
#accuracy
summary(fit)
